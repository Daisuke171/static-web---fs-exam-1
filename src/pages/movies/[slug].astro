---
import MainLayout from '../../layout/MainLayout.astro';
import type { GetStaticPaths } from 'astro';
import { slugify } from '../../utils/slugify';


export const getStaticPaths: GetStaticPaths = async () => {
  const API_KEY = "26556575658af780cf7d1cdfa28bc314";
  const pageCount = 18;
  const movies = [];

  for (let i = 1; i <= pageCount; i++) {
    const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=es-ES&page=${i}`);
    const data = await response.json();
    movies.push(...data.results);
  }

  return movies.map(movie => ({
    params: { slug: `${slugify(movie.title)}-${movie.id}` },
    props: { movie },
  }));
};

const { slug } = Astro.params;
const id = String(slug).split('-').pop();
const API_KEY = "26556575658af780cf7d1cdfa28bc314";
const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=es-ES`);
const movie = await response.json();
---


<MainLayout title={movie.title}>

  <main class="movie">

    {movie.backdrop_path && (
      <figure class="movie__backdrop">
        <img 
          src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`} 
          alt={`Fondo de ${movie.title}`} 
          class="movie__backdrop-image"
        />
      </figure>
    )}

    <section class="movie__content">
      <aside class="movie__poster-wrapper">
        <img 
          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} 
          alt={`PÃ³ster de ${movie.title}`} 
          class="movie__poster"
        />
        <div class="movie__rating">
          <span class="movie__rating-value">{movie.vote_average.toFixed(1)}</span>
          <span class="movie__rating-max">/10</span>
        </div>
      </aside>

      <article class="movie__info">
        <header class="movie__header">
          <h1 class="movie__title">{movie.title}</h1>
          <div class="movie__meta">
            <time class="movie__release-date" dateTime={movie.release_date}>
              {new Date(movie.release_date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })}
            </time>
            {movie.runtime && (
              <span class="movie__runtime">
                {Math.floor(movie.runtime / 60)}h {movie.runtime % 60}m
              </span>
            )}
            {movie.genres && (
              <ul class="movie__genres">
                {movie.genres.map(genre => (
                  <li class="movie__genre">{genre.name}</li>
                ))}
              </ul>
            )}
          </div>
        </header>
          <div class="movie__overview">
            <h2 class="movie__overview-title">Sinopsis</h2>
            <p class="movie__overview-text">{movie.overview}</p>
          </div>
        </section>
      </article>
    </section>
  </main>
</MainLayout>



