---
const { img, title, vote_average, slug, id } = Astro.props;

export interface Props {
  img: string;
  title: string;
  vote_average: number;
  id: number;
  slug?: string;
  isCheck?: boolean;
}

---

<article class="movie-card">

  <div class="movie-card__image-container">

    <img src={img} alt={`Póster de ${title}`} class="movie-card__image"/>

    <div class="movie-card__image-container__favBtn">
        <div class="container">
        <label for={`checkbox-${id}`}>
          <div class="label">
            <input type="checkbox" id={`checkbox-${id}`} data-id={id} />
            <div class="heart">
              <svg viewBox="0 0 544.582 544.582">
                <path d="M448.069,57.839c-72.675-23.562-150.781,15.759-175.721,87.898C247.41,73.522,169.303,34.277,96.628,57.839
                C23.111,81.784-16.975,160.885,6.894,234.708c22.95,70.38,235.773,258.876,263.006,258.876
                c27.234,0,244.801-188.267,267.751-258.876C561.595,160.732,521.509,81.631,448.069,57.839z">
              </svg>
              <svg viewBox="0 0 544.582 544.582">
                <path d="M448.069,57.839c-72.675-23.562-150.781,15.759-175.721,87.898C247.41,73.522,169.303,34.277,96.628,57.839
                C23.111,81.784-16.975,160.885,6.894,234.708c22.95,70.38,235.773,258.876,263.006,258.876
                c27.234,0,244.801-188.267,267.751-258.876C561.595,160.732,521.509,81.631,448.069,57.839z">
              </svg>
            </div>
          </div>
        </label>
      </div>
    </div>

    <div class="movie-card__overlay">
      <span class="movie-card__rating">❤️ {vote_average.toFixed(1)}</span>
      <a href={`/actors/${slug}`} class="movie-card__link">Ver detalles</a>
    </div>

  </div>

  <h3 class="movie-card__title">
    <a href={`/actors/${slug}`}>{title}</a>
  </h3>
</article>


<style>
 .movie-card {
    min-width: 150px;
    height: 100%;
    border-radius: 12px;
    overflow: hidden;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
    position: relative;
  }

  .movie-card:hover {
    border-color: var(--color-accent);
  }

  .movie-card__image-container {
    position: relative;
    width: 100%;
    aspect-ratio: 2/3;
    overflow: hidden;
  }

  .movie-card__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .movie-card:hover .movie-card__image {
    transform: scale(1.05);
  }

  .movie-card__overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.9) 0%, transparent 100%);
    padding: 1.5rem 1rem 1rem;
    opacity: 0; 
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .movie-card:hover .movie-card__overlay {
    opacity: 1;
    transition: opacity 0.3s ease;
  }

  .movie-card__rating {
    color: var(--color-accent);
    font-weight: var(--font-weight-bold);
    font-size: 1.1rem;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .movie-card__link {
    color: var(--color-light);
    text-align: center;
    text-decoration: none;
    background: var(--color-primary);
    padding: 0.5rem 1rem;
    border-radius: 4px;
    font-weight: var(--font-weight-medium);
    transition: all 0.2s ease;
    font-family: var(--font-main);
  }

  .movie-card__link:hover {
    background: var(--color-accent);
    color: var(--color-dark);
  }

  .movie-card__title {
    margin: 0;
    padding: 1rem;
  }

  .movie-card__title a {
    color: var(--color-light);
    text-decoration: none;
    font-weight: var(--font-weight-medium);
    transition: color 0.2s ease;
    display: -webkit-box;
    overflow: hidden;
    font-family: var(--font-main);
  }

  .movie-card__title a:hover {
    color: var(--color-accent);
  }

  .movie-card__image-container__favBtn{
    width: fit-content;
    position: absolute;
    top: 10px;
    right: 10px;
  }

.label {
  height: 40px;
  width: 40px;
  display: grid;
  place-items: center;
  border-radius: 20px;
  background: #e6e6e6;
  box-shadow: 0px 0px 40px #18181816, 0px 0px 40px #3d3d3d10;
  cursor: pointer;
}

.heart {
  display: grid;
  place-items: center;
  position: relative;
}

svg {
  height: 25px;
  fill: rgb(168, 170, 181);
  transition: all 500ms ease-in-out;
}

svg:nth-child(2) {
  position: absolute;
  z-index: 2;
}

input {
  display: none;
}

input:checked + .heart svg {
  fill: red;
}

input:checked + .heart svg:nth-child(2) {
  filter: opacity(1);
  animation: heart 0.3s linear forwards;
}

@keyframes heart {
  to {
    transform: scale(1.4);
    filter: opacity(0);
    fill: red;
  }
}
 
</style>


<script type="module" is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const checkboxes = document.querySelectorAll('input[type="checkbox"][data-id]');
    const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];

    checkboxes.forEach((checkbox) => {
      const id = parseInt(checkbox.dataset.id);

      // Cargar estado guardado
      if (savedFavorites.includes(id)) {
        checkbox.checked = true;
      }

      // Ver cambios
      checkbox.addEventListener('change', () => {
        let favorites = JSON.parse(localStorage.getItem('favorites')) || [];

        if (checkbox.checked) {
          if (!favorites.includes(id)) {
            favorites.push(id);
          }
        } else {
          favorites = favorites.filter(favId => favId !== id);
        }

        localStorage.setItem('favorites', JSON.stringify(favorites));
        console.log("Cargando favoritos:", savedFavorites);
      });
    });
  });

  
</script>
